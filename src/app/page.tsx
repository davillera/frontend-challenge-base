import { Metadata } from 'next';
import Movies from '@/app/components/Movies';
import RootLayout from './layout';
import Header from '@/app/components/Header';
import Banner from '@/app/components/Banner';
import Search from '@/app/components/Search';

import MovieSearchContainer from "@/app/components/MovieSearchContainer";


const API_URL = process.env.NEXT_PUBLIC_API_URL;
const API_KEY = process.env.NEXT_PUBLIC_API_KEY;

async function getMovieNow() {
  try {
    const res = await fetch(`${API_URL}/movie/now_playing?api_key=${API_KEY}`);
    if (!res.ok) throw new Error("Error fetching movies");
    const data = await res.json();
    return data.results ? data.results[0] : null;
  } catch (error) {
    console.error(error);
    return null;
  }
}

async function getAllMovies() {
  const res = await fetch(`${API_URL}/movie/popular?api_key=${API_KEY}`);
  const data = await res.json();
  return data.results;
}

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function Home() {

  const movieNow = await getMovieNow();
  const initialMovies = await getAllMovies();

  return (
    <RootLayout>
      <Header />
      <Banner
        title={movieNow?.title || "No disponible"}
        description={movieNow?.overview || "No hay descripciÃ³n disponible"}
        backgroundImage={movieNow ? `https://image.tmdb.org/t/p/original/${movieNow.backdrop_path}` : '/default-image.jpg'}
        vote_average={movieNow?.vote_average || 0}
      />
      <MovieSearchContainer
        initialMovies={initialMovies}
      />
    </RootLayout>
  );
}
